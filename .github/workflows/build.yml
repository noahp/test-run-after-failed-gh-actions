# Example showing a matrix job and a run-after-build job that only runs if
# there's a failure


name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install CMSIS Toolbox
        run: |
          wget https://github.com/Open-CMSIS-Pack/cmsis-toolbox/releases/download/2.1.0/cmsis-toolbox-linux-amd64.tar.gz
          tar -xvzf cmsis-toolbox-linux-amd64.tar.gz
          echo ${PWD}/cmsis-toolbox-linux-amd64/bin >> $GITHUB_PATH
          ./cmsis-toolbox-linux-amd64/bin/cpackget --version

      - name: Install Memfault CMSIS Pack
        run: |
          echo $PATH
          # note: installing the non-https pidx, their cert is expired
          cpackget init https://www.keil.com/pack/index.pidx
          cpackget add --verbose --agree-embedded-license Memfault::FirmwareSDK

          # confirm the pack matches the latest tag on the fw repo, from the VERSION file
          SDK_VERSION=$(curl -sSL https://raw.githubusercontent.com/memfault/memfault-firmware-sdk/master/VERSION | grep -oP 'VERSION:\s*\K[^[:space:]]+')1
          PACK_VERSION=$(cpackget list | grep -oP 'Memfault::FirmwareSDK\s*\K[^[:space:]]+')
          if [ "$SDK_VERSION" != "$PACK_VERSION" ]; then
            echo "SDK_VERSION: $SDK_VERSION"
            echo "PACK_VERSION: $PACK_VERSION"
            echo "SDK_VERSION and PACK_VERSION do not match"
            exit 1
          else
            echo 'SDK_VERSION and PACK_VERSION match:' $SDK_VERSION
          fi
